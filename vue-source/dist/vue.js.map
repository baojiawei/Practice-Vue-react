{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/compiler/parser-html.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["/**\n * 判断数据是不是对象\n */\nexport function isObject(obj) {\n  return typeof obj === 'object' && obj !== null\n}","// 获取数组原型上的方法\nlet oldArrayMethods = Array.prototype\n// 创建一个全新的对象，可以找到数组原型上的方法, 而且修改对象时不会影响数组原型方法\nexport let arrayMethods = Object.create(oldArrayMethods)\n\n// 这7个方法全部都可以改变原数组\nlet methods = ['push', 'pop', 'unshift', 'sort', 'reverse', 'splice']\n\nmethods.forEach((method) => {\n  // 函数劫持 AOP\n  arrayMethods[method] = function (...args) {\n    const ob = this.__ob__\n    // 当用户调用数组方法时，会先执行我自己改造的逻辑，再执行数组默认的逻辑\n    let result = oldArrayMethods[method].apply(this, args)\n    let inserted\n    // push unshift splice 都可以新增属性 (新增的属性可能是一个对象类型)\n    // 内部还对数组中引用类型也做了一次劫持 [].push({name: 'bjw'})\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break\n      case 'splice': // 也是新增属性，可以修改，可以删除 [].splice(arr, 1, 'div')\n        inserted = args.slice(2)\n      default:\n        break\n    }\n    inserted && ob.observerArray(inserted)\n    return result\n  }\n})\n","import { isObject } from '../utils'\nimport { arrayMethods } from './array'\nclass Observer {\n  constructor(data) {\n    // 相当于在数据上可以获取到__ob__这个属性 指代的是observer实例\n    // __ob__ 是一个响应式的标识，对象数组都有\n    Object.defineProperty(data, '__ob__', {\n      enumerable: false, // 不可枚举\n      configurable: false, // 不可配置\n      value: this\n    })\n    if (Array.isArray(data)) {\n      // 重写数组方法，函数劫持, 改变数组本身的方法，加入监控\n      // 通过原型链 向上查找\n      data.__proto__ = arrayMethods\n      this.observerArray(data)\n    } else {\n      this.walk(data) // 对数据一步步处理\n    }\n  }\n\n  observerArray(data) {\n    for (let i = 0; i < data.length; i++) {\n      observer(data[i])\n    }\n  }\n\n  walk(data) {\n    // 对象的循环 data:{msg: 'bbb', age: 12}\n    Object.keys(data).forEach((key) => {\n      defineReactive(data, key, data[key]) // 定义响应式的数据变化\n    })\n  }\n}\n// vue2的性能 递归重写get和set 一次性递归到底 proxy可以解决\nfunction defineReactive(data, key, value) {\n  observer(value) // 如果传入的值还是一个对象的话，就做递归循环监测\n  Object.defineProperty(data, key, {\n    get() {\n      return value\n    },\n    set(newValue) {\n      if (newValue === value) {\n        return\n      }\n      observer(newValue) // 监控当前设置的值，有可能用户给了一个新值还是对象\n      value = newValue\n    },\n  })\n}\n\nexport function observer(data) {\n  // 对象就是使用defineProperty 来实现响应式原理\n\n  // 如果这个数据不是对象 或者是null 那就不用监控了\n  if (!isObject(data)) {\n    return\n  }\n\n  if(data.__ob__ instanceof Observer) { // 防止对象被重复观测\n    return\n  }\n  // 对数据进行defineProperty\n  return new Observer(data) // 可以看到当前数据是否被观测过\n}\n","import { observer } from './observer/index'\nexport function initState(vm) {\n  const options = vm.$options\n  if (options.props) {\n    initProps(vm)\n  }\n  if (options.methods) {\n    initMethods(vm)\n  }\n  if (options.data) {\n    initData(vm)\n  }\n}\n\nfunction initProps(vm) {}\n\nfunction initMethods(vm) {}\n\nfunction initData(vm) {\n  // 数据响应式原理\n  let data = vm.$options.data // 用户传入的数据\n  // vm._data是监测后的数据\n  data = vm._data =typeof data === 'function' ? data.call(vm) : data\n  // 观测数据\n  observer(data) // 观测这个数据\n}\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/ // 匹配标签结束的 >\n\nlet root = null // ast语法树的树根\nlet currentParent // 标识当前父亲是谁\nlet stack = []\nconst ELEMENT_TYPE = 1\nconst TEXT_TYPE = 3\n\nfunction createASTElement(tagName, attrs) {\n  return {\n    tag: tagName,\n    type: ELEMENT_TYPE,\n    children: [],\n    attrs,\n    parent: null,\n  }\n}\nfunction start(tagName, attrs) {\n  // 遇到开始标签 就创建一个ast元素\n  let element = createASTElement(tagName, attrs)\n  if (!root) {\n    root = element\n  }\n  currentParent = element // 把当前元素标记成父ast树\n  stack.push(element) // 将开始标签存放到栈中\n}\nfunction chars(text) {\n  text = text.replace(/\\s/g, '')\n  if (text) {\n    currentParent.children.push({\n      text,\n      type: TEXT_TYPE,\n    })\n  }\n}\nfunction end(tagName) {\n  let element = stack.pop()\n  currentParent = stack[stack.length - 1]\n  if (currentParent) {\n    element.parent = currentParent\n    currentParent.children.push(element)\n  }\n}\nexport function parseHTML(html) {\n  // 不停的去解析html字符串\n  while (html) {\n    let textEnd = html.indexOf('<')\n    if (textEnd === 0) {\n      // 如果当前索引为0 肯定是一个标签 开始标签 结束标签\n      let startTagMatch = parseStartTag()\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue // 如果开始标签匹配完毕后，继续下一次匹配\n      }\n      let endTagMatch = html.match(endTag)\n      if (endTagMatch) {\n        advance(endTagMatch[0].length)\n        end(endTagMatch[1])\n        continue\n      }\n    }\n    let text\n    if (textEnd >= 0) {\n      text = html.substring(0, textEnd)\n    }\n    if (text) {\n      advance(text.length)\n      chars(text)\n    }\n  }\n  function advance(n) {\n    html = html.substring(n)\n  }\n  function parseStartTag() {\n    let start = html.match(startTagOpen)\n    if (start) {\n      const match = {\n        tagName: start[1],\n        attrs: [],\n      }\n      advance(start[0].length) // 将标签删除\n      let end, attr\n      while (\n        !(end = html.match(startTagClose)) &&\n        (attr = html.match(attribute))\n      ) {\n        advance(attr[0].length) // 将属性删除\n        match.attrs.push({\n          // 解析属性\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5],\n        })\n      }\n      if (end) {\n        // 去除结束标签，前进一格并返回ast语法树\n        advance(end[0].length)\n        return match\n      }\n    }\n  }\n  return root\n}\n","// 实现模板的编译\n// 模板编译原理\n// 1.先把我们的代码转化成ast语法树 (1)parser解析 (正则)\n// 2.标记静态树 (2) 树得遍历标记markup\n// 3.通过ast产生的语法树 生成代码 => render函数 codegen\nimport { parseHTML } from './parser-html'\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n// 处理属性 拼接成属性的字符串\nfunction genProps(attrs) {\n  let str = ''\n  for(let i=0;i<attrs.length;i++) {\n    let attr = attrs[i]\n    if(attr.name === 'style') {\n      let obj = {}\n      attr.value.split(';').forEach(item => {\n        let [key, value] = item.split(':')\n        obj[key] = value\n      })\n      attr.value = obj\n    }\n    str+=`${attr.name}:${JSON.stringify(attr.value)},`\n  }\n  return `{${str.slice(0, -1)}}`\n}\n\nfunction gen(node) {\n  if(node.type === 1) {\n    return generate(node)\n  } else {\n    let text = node.text\n    let tokens = []\n    let match, index\n    // 只要是全局匹配 就需要将lastIndex的偏移量置为0\n    let lastIndex = defaultTagRE.lastIndex = 0\n    while(match = defaultTagRE.exec(text)) {\n      index = match.index\n      if(index > lastIndex) {\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n      }\n      tokens.push(`_s(${match[1].trim()})`)\n      lastIndex = index + match[0].length\n    }\n    if(lastIndex < text.length) {\n      tokens.push(JSON.stringify(text.slice(lastIndex)))\n    }\n    // a {{name}} b{{age}} c\n    // _v(\"a\"+_s(name)+\"b\"+_s(age)+\"c\")\n    // 正则 lastIndex问题\n    return `_v(${tokens.join('+')})`\n  }\n}\n\nfunction genChildren(el) {\n  let children =  el.children\n  if(children && children.length>0) {\n    return `${children.map(c => gen(c)).join(',')}`\n  } else {\n    return false\n  }\n}\nfunction generate(el) {\n  const children = genChildren(el) // 获取孩子节点\n  let code = `_c(\"${el.tag}\", ${el.attrs.length?genProps(el.attrs):'undefined'}\n  ${children?`,${children}`: ''})\n  `\n  return code\n}\nexport function compileToFunctions(template) {\n  // 解析html字符串 将html字符串 => ast语法树\n  let root = parseHTML(template)\n  // 需要将ast语法树生成最终的render函数 就是字符串拼接(模板引擎 )\n  let code = generate(root)\n  // 所有的模板引擎实现，都需要new Function + with\n  let renderFn = new Function(`with(this){ return ${code} }`)\n  // 核心思路就是将模板转化成下面这段字符串\n  // <div id=\"app\"><p>hello {{name}}</p> hello</div>\n  // 将ast树再次转化成js的语法\n  // _c('div', {id: 'app'}, _c('p', undefined, _v('hello', _s(name))), _v('hello'))\n  return renderFn\n}\n","import { initState } from './state'\nimport { compileToFunctions } from './compiler/index'\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    // Vue的内部 $options 就是用户传递的所有参数\n    const vm = this\n    vm.$options = options // 用户传入的参数\n\n    initState(vm) // 初始化状态\n\n    // 需要通过模板渲染\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el)\n    }\n  }\n  Vue.prototype.$mount = function (el) {\n    // 可能是字符串 也可以传入一个dom对象\n    const vm = this\n    el = document.querySelector(el) // 获取el属性\n    // 如果同时传入 template 和 render 默认会采用render抛弃template，如果都没传\n    // 就使用id=\"app\"中的模板\n    const options = vm.$options\n    if (!options.render) {\n      let template = options.template\n      if (!template && el) {\n        // 应该使用外部的模板\n        template = el.outerHTML\n      }\n      const render = compileToFunctions(template)\n      options.render = render\n    }\n\n    // 走到这里说明不需要编译了，因为用户传入的就是一个render函数\n  }\n}\n","import {initMixin} from './init'\nfunction Vue(options) {\n  // 内部要进行初始化操作\n  this._init(options)\n}\n\ninitMixin(Vue)\nexport default Vue\n"],"names":["isObject","obj","oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","ob","__ob__","args","result","apply","inserted","slice","observerArray","Observer","data","defineProperty","enumerable","configurable","value","isArray","__proto__","walk","i","length","observer","keys","key","defineReactive","get","set","newValue","initState","vm","options","$options","props","initData","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","push","chars","text","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","split","item","JSON","stringify","gen","node","generate","tokens","index","lastIndex","exec","trim","join","genChildren","el","map","c","code","compileToFunctions","template","renderFn","Function","initMixin","Vue","_init","$mount","document","querySelector","render","outerHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;;;EAGO,SAASA,QAAT,CAAkBC,GAAlB,EAAuB;EAC5B,SAAO,QAAOA,GAAP,MAAe,QAAf,IAA2BA,GAAG,KAAK,IAA1C;EACD;;ECLD;EACA,IAAIC,eAAe,GAAGC,KAAK,CAACC,SAA5B;;EAEO,IAAIC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcL,eAAd,CAAnB;;EAGP,IAAIM,OAAO,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,SAAhB,EAA2B,MAA3B,EAAmC,SAAnC,EAA8C,QAA9C,CAAd;EAEAA,OAAO,CAACC,OAAR,CAAgB,UAACC,MAAD,EAAY;EAC1B;EACAL,EAAAA,YAAY,CAACK,MAAD,CAAZ,GAAuB,YAAmB;EACxC,QAAMC,EAAE,GAAG,KAAKC,MAAhB,CADwC;;EAAA,sCAANC,IAAM;EAANA,MAAAA,IAAM;EAAA;;EAGxC,QAAIC,MAAM,GAAGZ,eAAe,CAACQ,MAAD,CAAf,CAAwBK,KAAxB,CAA8B,IAA9B,EAAoCF,IAApC,CAAb;EACA,QAAIG,QAAJ,CAJwC;EAMxC;;EACA,YAAQN,MAAR;EACE,WAAK,MAAL;EACA,WAAK,SAAL;EACEM,QAAAA,QAAQ,GAAGH,IAAX;EACA;;EACF,WAAK,QAAL;EAAe;EACbG,QAAAA,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAW,CAAX,CAAX;EANJ;;EAUAD,IAAAA,QAAQ,IAAIL,EAAE,CAACO,aAAH,CAAiBF,QAAjB,CAAZ;EACA,WAAOF,MAAP;EACD,GAnBD;EAoBD,CAtBD;;MCNMK;EACJ,oBAAYC,IAAZ,EAAkB;EAAA;;EAChB;EACA;EACAd,IAAAA,MAAM,CAACe,cAAP,CAAsBD,IAAtB,EAA4B,QAA5B,EAAsC;EACpCE,MAAAA,UAAU,EAAE,KADwB;EACjB;EACnBC,MAAAA,YAAY,EAAE,KAFsB;EAEf;EACrBC,MAAAA,KAAK,EAAE;EAH6B,KAAtC;;EAKA,QAAIrB,KAAK,CAACsB,OAAN,CAAcL,IAAd,CAAJ,EAAyB;EACvB;EACA;EACAA,MAAAA,IAAI,CAACM,SAAL,GAAiBrB,YAAjB;EACA,WAAKa,aAAL,CAAmBE,IAAnB;EACD,KALD,MAKO;EACL,WAAKO,IAAL,CAAUP,IAAV,EADK;EAEN;EACF;;;;oCAEaA,MAAM;EAClB,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACS,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;EACpCE,QAAAA,QAAQ,CAACV,IAAI,CAACQ,CAAD,CAAL,CAAR;EACD;EACF;;;2BAEIR,MAAM;EACT;EACAd,MAAAA,MAAM,CAACyB,IAAP,CAAYX,IAAZ,EAAkBX,OAAlB,CAA0B,UAACuB,GAAD,EAAS;EACjCC,QAAAA,cAAc,CAACb,IAAD,EAAOY,GAAP,EAAYZ,IAAI,CAACY,GAAD,CAAhB,CAAd,CADiC;EAElC,OAFD;EAGD;;;;;;;EAGH,SAASC,cAAT,CAAwBb,IAAxB,EAA8BY,GAA9B,EAAmCR,KAAnC,EAA0C;EACxCM,EAAAA,QAAQ,CAACN,KAAD,CAAR,CADwC;;EAExClB,EAAAA,MAAM,CAACe,cAAP,CAAsBD,IAAtB,EAA4BY,GAA5B,EAAiC;EAC/BE,IAAAA,GAD+B,iBACzB;EACJ,aAAOV,KAAP;EACD,KAH8B;EAI/BW,IAAAA,GAJ+B,eAI3BC,QAJ2B,EAIjB;EACZ,UAAIA,QAAQ,KAAKZ,KAAjB,EAAwB;EACtB;EACD;;EACDM,MAAAA,QAAQ,CAACM,QAAD,CAAR,CAJY;;EAKZZ,MAAAA,KAAK,GAAGY,QAAR;EACD;EAV8B,GAAjC;EAYD;;EAEM,SAASN,QAAT,CAAkBV,IAAlB,EAAwB;EAC7B;EAEA;EACA,MAAI,CAACpB,QAAQ,CAACoB,IAAD,CAAb,EAAqB;EACnB;EACD;;EAED,MAAGA,IAAI,CAACR,MAAL,YAAuBO,QAA1B,EAAoC;EAAE;EACpC;EACD,GAV4B;;;EAY7B,SAAO,IAAIA,QAAJ,CAAaC,IAAb,CAAP,CAZ6B;EAa9B;;EC/DM,SAASiB,SAAT,CAAmBC,EAAnB,EAAuB;EAC5B,MAAMC,OAAO,GAAGD,EAAE,CAACE,QAAnB;;EACA,MAAID,OAAO,CAACE,KAAZ,EAAmB;;EAGnB,MAAIF,OAAO,CAAC/B,OAAZ,EAAqB;;EAGrB,MAAI+B,OAAO,CAACnB,IAAZ,EAAkB;EAChBsB,IAAAA,QAAQ,CAACJ,EAAD,CAAR;EACD;EACF;;EAMD,SAASI,QAAT,CAAkBJ,EAAlB,EAAsB;EACpB;EACA,MAAIlB,IAAI,GAAGkB,EAAE,CAACE,QAAH,CAAYpB,IAAvB,CAFoB;EAGpB;;EACAA,EAAAA,IAAI,GAAGkB,EAAE,CAACK,KAAH,GAAU,OAAOvB,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAACwB,IAAL,CAAUN,EAAV,CAA7B,GAA6ClB,IAA9D,CAJoB;;EAMpBU,EAAAA,QAAQ,CAACV,IAAD,CAAR,CANoB;EAOrB;;ECzBD,IAAMyB,MAAM,iCAAZ;EACA,IAAMC,YAAY,iBAAUD,MAAV,kBAAwBA,MAAxB,MAAlB;EACA,IAAME,YAAY,GAAG,IAAIC,MAAJ,aAAgBF,YAAhB,EAArB;;EACA,IAAMG,MAAM,GAAG,IAAID,MAAJ,gBAAmBF,YAAnB,YAAf;;EACA,IAAMI,SAAS,GAAG,2EAAlB;;EACA,IAAMC,aAAa,GAAG,YAAtB;;EAEA,IAAIC,IAAI,GAAG,IAAX;;EACA,IAAIC,aAAJ;;EACA,IAAIC,KAAK,GAAG,EAAZ;EACA,IAAMC,YAAY,GAAG,CAArB;EACA,IAAMC,SAAS,GAAG,CAAlB;;EAEA,SAASC,gBAAT,CAA0BC,OAA1B,EAAmCC,KAAnC,EAA0C;EACxC,SAAO;EACLC,IAAAA,GAAG,EAAEF,OADA;EAELG,IAAAA,IAAI,EAAEN,YAFD;EAGLO,IAAAA,QAAQ,EAAE,EAHL;EAILH,IAAAA,KAAK,EAALA,KAJK;EAKLI,IAAAA,MAAM,EAAE;EALH,GAAP;EAOD;;EACD,SAASC,KAAT,CAAeN,OAAf,EAAwBC,KAAxB,EAA+B;EAC7B;EACA,MAAIM,OAAO,GAAGR,gBAAgB,CAACC,OAAD,EAAUC,KAAV,CAA9B;;EACA,MAAI,CAACP,IAAL,EAAW;EACTA,IAAAA,IAAI,GAAGa,OAAP;EACD;;EACDZ,EAAAA,aAAa,GAAGY,OAAhB,CAN6B;;EAO7BX,EAAAA,KAAK,CAACY,IAAN,CAAWD,OAAX,EAP6B;EAQ9B;;EACD,SAASE,KAAT,CAAeC,IAAf,EAAqB;EACnBA,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP;;EACA,MAAID,IAAJ,EAAU;EACRf,IAAAA,aAAa,CAACS,QAAd,CAAuBI,IAAvB,CAA4B;EAC1BE,MAAAA,IAAI,EAAJA,IAD0B;EAE1BP,MAAAA,IAAI,EAAEL;EAFoB,KAA5B;EAID;EACF;;EACD,SAASc,GAAT,CAAaZ,OAAb,EAAsB;EACpB,MAAIO,OAAO,GAAGX,KAAK,CAACiB,GAAN,EAAd;EACAlB,EAAAA,aAAa,GAAGC,KAAK,CAACA,KAAK,CAACzB,MAAN,GAAe,CAAhB,CAArB;;EACA,MAAIwB,aAAJ,EAAmB;EACjBY,IAAAA,OAAO,CAACF,MAAR,GAAiBV,aAAjB;EACAA,IAAAA,aAAa,CAACS,QAAd,CAAuBI,IAAvB,CAA4BD,OAA5B;EACD;EACF;;EACM,SAASO,SAAT,CAAmBC,IAAnB,EAAyB;EAC9B;EACA,SAAOA,IAAP,EAAa;EACX,QAAIC,OAAO,GAAGD,IAAI,CAACE,OAAL,CAAa,GAAb,CAAd;;EACA,QAAID,OAAO,KAAK,CAAhB,EAAmB;EACjB;EACA,UAAIE,aAAa,GAAGC,aAAa,EAAjC;;EACA,UAAID,aAAJ,EAAmB;EACjBZ,QAAAA,KAAK,CAACY,aAAa,CAAClB,OAAf,EAAwBkB,aAAa,CAACjB,KAAtC,CAAL;EACA,iBAFiB;EAGlB;;EACD,UAAImB,WAAW,GAAGL,IAAI,CAACM,KAAL,CAAW9B,MAAX,CAAlB;;EACA,UAAI6B,WAAJ,EAAiB;EACfE,QAAAA,OAAO,CAACF,WAAW,CAAC,CAAD,CAAX,CAAejD,MAAhB,CAAP;EACAyC,QAAAA,GAAG,CAACQ,WAAW,CAAC,CAAD,CAAZ,CAAH;EACA;EACD;EACF;;EACD,QAAIV,IAAI,SAAR;;EACA,QAAIM,OAAO,IAAI,CAAf,EAAkB;EAChBN,MAAAA,IAAI,GAAGK,IAAI,CAACQ,SAAL,CAAe,CAAf,EAAkBP,OAAlB,CAAP;EACD;;EACD,QAAIN,IAAJ,EAAU;EACRY,MAAAA,OAAO,CAACZ,IAAI,CAACvC,MAAN,CAAP;EACAsC,MAAAA,KAAK,CAACC,IAAD,CAAL;EACD;EACF;;EACD,WAASY,OAAT,CAAiBE,CAAjB,EAAoB;EAClBT,IAAAA,IAAI,GAAGA,IAAI,CAACQ,SAAL,CAAeC,CAAf,CAAP;EACD;;EACD,WAASL,aAAT,GAAyB;EACvB,QAAIb,KAAK,GAAGS,IAAI,CAACM,KAAL,CAAWhC,YAAX,CAAZ;;EACA,QAAIiB,KAAJ,EAAW;EACT,UAAMe,KAAK,GAAG;EACZrB,QAAAA,OAAO,EAAEM,KAAK,CAAC,CAAD,CADF;EAEZL,QAAAA,KAAK,EAAE;EAFK,OAAd;EAIAqB,MAAAA,OAAO,CAAChB,KAAK,CAAC,CAAD,CAAL,CAASnC,MAAV,CAAP,CALS;;EAMT,UAAIyC,IAAJ,EAASa,IAAT;;EACA,aACE,EAAEb,IAAG,GAAGG,IAAI,CAACM,KAAL,CAAW5B,aAAX,CAAR,MACCgC,IAAI,GAAGV,IAAI,CAACM,KAAL,CAAW7B,SAAX,CADR,CADF,EAGE;EACA8B,QAAAA,OAAO,CAACG,IAAI,CAAC,CAAD,CAAJ,CAAQtD,MAAT,CAAP,CADA;;EAEAkD,QAAAA,KAAK,CAACpB,KAAN,CAAYO,IAAZ,CAAiB;EACf;EACAkB,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAFK;EAGf3D,UAAAA,KAAK,EAAE2D,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD;EAHlB,SAAjB;EAKD;;EACD,UAAIb,IAAJ,EAAS;EACP;EACAU,QAAAA,OAAO,CAACV,IAAG,CAAC,CAAD,CAAH,CAAOzC,MAAR,CAAP;EACA,eAAOkD,KAAP;EACD;EACF;EACF;;EACD,SAAO3B,IAAP;EACD;;ECpGD,IAAMiC,YAAY,GAAG,0BAArB;;EAEA,SAASC,QAAT,CAAkB3B,KAAlB,EAAyB;EACvB,MAAI4B,GAAG,GAAG,EAAV;;EACA,OAAI,IAAI3D,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC+B,KAAK,CAAC9B,MAApB,EAA2BD,CAAC,EAA5B,EAAgC;EAC9B,QAAIuD,IAAI,GAAGxB,KAAK,CAAC/B,CAAD,CAAhB;;EACA,QAAGuD,IAAI,CAACC,IAAL,KAAc,OAAjB,EAA0B;EAAA;EACxB,YAAInF,GAAG,GAAG,EAAV;EACAkF,QAAAA,IAAI,CAAC3D,KAAL,CAAWgE,KAAX,CAAiB,GAAjB,EAAsB/E,OAAtB,CAA8B,UAAAgF,IAAI,EAAI;EAAA,4BACjBA,IAAI,CAACD,KAAL,CAAW,GAAX,CADiB;EAAA;EAAA,cAC/BxD,GAD+B;EAAA,cAC1BR,KAD0B;;EAEpCvB,UAAAA,GAAG,CAAC+B,GAAD,CAAH,GAAWR,KAAX;EACD,SAHD;EAIA2D,QAAAA,IAAI,CAAC3D,KAAL,GAAavB,GAAb;EANwB;EAOzB;;EACDsF,IAAAA,GAAG,cAAKJ,IAAI,CAACC,IAAV,cAAkBM,IAAI,CAACC,SAAL,CAAeR,IAAI,CAAC3D,KAApB,CAAlB,MAAH;EACD;;EACD,oBAAW+D,GAAG,CAACtE,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAX;EACD;;EAED,SAAS2E,GAAT,CAAaC,IAAb,EAAmB;EACjB,MAAGA,IAAI,CAAChC,IAAL,KAAc,CAAjB,EAAoB;EAClB,WAAOiC,QAAQ,CAACD,IAAD,CAAf;EACD,GAFD,MAEO;EACL,QAAIzB,IAAI,GAAGyB,IAAI,CAACzB,IAAhB;EACA,QAAI2B,MAAM,GAAG,EAAb;EACA,QAAIhB,KAAJ,EAAWiB,KAAX,CAHK;;EAKL,QAAIC,SAAS,GAAGZ,YAAY,CAACY,SAAb,GAAyB,CAAzC;;EACA,WAAMlB,KAAK,GAAGM,YAAY,CAACa,IAAb,CAAkB9B,IAAlB,CAAd,EAAuC;EACrC4B,MAAAA,KAAK,GAAGjB,KAAK,CAACiB,KAAd;;EACA,UAAGA,KAAK,GAAGC,SAAX,EAAsB;EACpBF,QAAAA,MAAM,CAAC7B,IAAP,CAAYwB,IAAI,CAACC,SAAL,CAAevB,IAAI,CAACnD,KAAL,CAAWgF,SAAX,EAAsBD,KAAtB,CAAf,CAAZ;EACD;;EACDD,MAAAA,MAAM,CAAC7B,IAAP,cAAkBa,KAAK,CAAC,CAAD,CAAL,CAASoB,IAAT,EAAlB;EACAF,MAAAA,SAAS,GAAGD,KAAK,GAAGjB,KAAK,CAAC,CAAD,CAAL,CAASlD,MAA7B;EACD;;EACD,QAAGoE,SAAS,GAAG7B,IAAI,CAACvC,MAApB,EAA4B;EAC1BkE,MAAAA,MAAM,CAAC7B,IAAP,CAAYwB,IAAI,CAACC,SAAL,CAAevB,IAAI,CAACnD,KAAL,CAAWgF,SAAX,CAAf,CAAZ;EACD,KAhBI;EAkBL;EACA;;;EACA,wBAAaF,MAAM,CAACK,IAAP,CAAY,GAAZ,CAAb;EACD;EACF;;EAED,SAASC,WAAT,CAAqBC,EAArB,EAAyB;EACvB,MAAIxC,QAAQ,GAAIwC,EAAE,CAACxC,QAAnB;;EACA,MAAGA,QAAQ,IAAIA,QAAQ,CAACjC,MAAT,GAAgB,CAA/B,EAAkC;EAChC,qBAAUiC,QAAQ,CAACyC,GAAT,CAAa,UAAAC,CAAC;EAAA,aAAIZ,GAAG,CAACY,CAAD,CAAP;EAAA,KAAd,EAA0BJ,IAA1B,CAA+B,GAA/B,CAAV;EACD,GAFD,MAEO;EACL,WAAO,KAAP;EACD;EACF;;EACD,SAASN,QAAT,CAAkBQ,EAAlB,EAAsB;EACpB,MAAMxC,QAAQ,GAAGuC,WAAW,CAACC,EAAD,CAA5B,CADoB;;EAEpB,MAAIG,IAAI,kBAAUH,EAAE,CAAC1C,GAAb,iBAAsB0C,EAAE,CAAC3C,KAAH,CAAS9B,MAAT,GAAgByD,QAAQ,CAACgB,EAAE,CAAC3C,KAAJ,CAAxB,GAAmC,WAAzD,iBACNG,QAAQ,cAAKA,QAAL,IAAiB,EADnB,UAAR;EAGA,SAAO2C,IAAP;EACD;;EACM,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;EAC3C;EACA,MAAIvD,IAAI,GAAGoB,SAAS,CAACmC,QAAD,CAApB,CAF2C;;EAI3C,MAAIF,IAAI,GAAGX,QAAQ,CAAC1C,IAAD,CAAnB,CAJ2C;;EAM3C,MAAIwD,QAAQ,GAAG,IAAIC,QAAJ,8BAAmCJ,IAAnC,QAAf,CAN2C;EAQ3C;EACA;EACA;;EACA,SAAOG,QAAP;EACD;;EC7EM,SAASE,SAAT,CAAmBC,GAAnB,EAAwB;EAC7BA,EAAAA,GAAG,CAAC3G,SAAJ,CAAc4G,KAAd,GAAsB,UAAUzE,OAAV,EAAmB;EACvC;EACA,QAAMD,EAAE,GAAG,IAAX;EACAA,IAAAA,EAAE,CAACE,QAAH,GAAcD,OAAd,CAHuC;;EAKvCF,IAAAA,SAAS,CAACC,EAAD,CAAT,CALuC;EAOvC;;EACA,QAAIA,EAAE,CAACE,QAAH,CAAY8D,EAAhB,EAAoB;EAClBhE,MAAAA,EAAE,CAAC2E,MAAH,CAAU3E,EAAE,CAACE,QAAH,CAAY8D,EAAtB;EACD;EACF,GAXD;;EAYAS,EAAAA,GAAG,CAAC3G,SAAJ,CAAc6G,MAAd,GAAuB,UAAUX,EAAV,EAAc;EACnC;EACA,QAAMhE,EAAE,GAAG,IAAX;EACAgE,IAAAA,EAAE,GAAGY,QAAQ,CAACC,aAAT,CAAuBb,EAAvB,CAAL,CAHmC;EAInC;EACA;;EACA,QAAM/D,OAAO,GAAGD,EAAE,CAACE,QAAnB;;EACA,QAAI,CAACD,OAAO,CAAC6E,MAAb,EAAqB;EACnB,UAAIT,QAAQ,GAAGpE,OAAO,CAACoE,QAAvB;;EACA,UAAI,CAACA,QAAD,IAAaL,EAAjB,EAAqB;EACnB;EACAK,QAAAA,QAAQ,GAAGL,EAAE,CAACe,SAAd;EACD;;EACD,UAAMD,MAAM,GAAGV,kBAAkB,CAACC,QAAD,CAAjC;EACApE,MAAAA,OAAO,CAAC6E,MAAR,GAAiBA,MAAjB;EACD,KAfkC;;EAkBpC,GAlBD;EAmBD;;ECjCD,SAASL,GAAT,CAAaxE,OAAb,EAAsB;EACpB;EACA,OAAKyE,KAAL,CAAWzE,OAAX;EACD;;EAEDuE,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}